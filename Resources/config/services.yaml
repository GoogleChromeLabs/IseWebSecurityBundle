services:
  _defaults:
    autowire: true
    autoconfigure: true

  Ise\WebSecurityBundle\:
      resource: '../../'
      exclude: '../../{DependencyInjection,tests,vendor,DataCollector}'

  ise_fetch_metadata.subscriber:
    class: Ise\WebSecurityBundle\EventSubscriber\FetchMetadataRequestSubscriber
    arguments: 
      $fetchMetadataPolicyProvider: '@Ise\WebSecurityBundle\Policies\FetchMetadataPolicyProvider'
      $configProvider: '@Ise\WebSecurityBundle\Options\ConfigProvider'
    tags:
      - { name: monolog.logger, channel: security }

  Ise\WebSecurityBundle\EventSubscriber\FetchMetadataRequestSubscriber: '@ise_fetch_metadata.subscriber'
  
  ise_fetch_metadata.default_policy:
    class: Ise\WebSecurityBundle\Policies\FetchMetadataDefaultPolicy
    arguments:
      $corsEndpoints: []

  Ise\WebSecurityBundle\Policies\FetchMetadataDefaultPolicy: '@ise_fetch_metadata.default_policy'

  ise_coop_coep.subscriber:
    class: Ise\WebSecurityBundle\EventSubscriber\ResponseSubscriber
    arguments:
      $configProvider: '@Ise\WebSecurityBundle\Options\ConfigProvider'

  Ise\WebSecurityBundle\EventSubscriber\ResponseSubscriber: '@ise_coop_coep.subscriber'

  Ise\WebSecurityBundle\EventSubscriber\TrustedTypesSubscriber: '@ise_trusted_types.subscriber'

  ise_trusted_types.subscriber:
    class: Ise\WebSecurityBundle\EventSubscriber\TrustedTypesSubscriber
    arguments:
      $configProvider: '@Ise\WebSecurityBundle\Options\ConfigProvider'

  ise_config.provider:
    class: Ise\WebSecurityBundle\Options\ConfigProvider
    arguments:
      $defaults: []
      $paths: []
      $presets: []

  Ise\WebSecurityBundle\Options\ConfigProvider: '@ise_config.provider'