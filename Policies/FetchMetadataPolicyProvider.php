<?php

namespace Ise\WebSecurityBundle\Policies;

use InvalidArgumentException;

/** Factory Class for handling dynamic injection of Fetch Metadata Policies.
 *  Fetch Metadata policies are injected based on the pathConfig for a particular request. If no policy is configured the default Policy is returned.
 *  If a configured class does not implement the FetchMetadataPolicyInterface, then an Exception is thrown.
 *  @param array $pathConfig Array of path configuration generated by a ConfigurationProvider
 *  @return FetchMetadataPolicyInterface
 */
class FetchMetadataPolicyProvider
{
    public function getFetchMetadataPolicy(array $pathConfig): FetchMetadataPolicyInterface
    {
        if (isset($pathConfig['policy'])) {
            $policy = new $pathConfig['policy'];
            if (is_subclass_of($policy, FetchMetadataPolicyInterface::class)) {
                return $policy;
            } else {
                throw new InvalidArgumentException("Policy ".$pathConfig['policy']." does not implement FetchMetadataPolicyInterface and may not be a valid policy");
            }
        } else {
            $allowedOrigins = $pathConfig["allowed_origins"] ?? [];
            return new FetchMetadataDefaultPolicy($allowedOrigins);
        }
    }
}
